/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package componente;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author user
 */
public class ContactosCreados extends javax.swing.JFrame {
      private boolean isPanelVisible = true;
      private Timer timer;
      private static final String CONTACTOS_FILE = "contactos.txt";
    /**
     * Creates new form ContactosCreados
     */
    public ContactosCreados() {
        initComponents();
        cargarContactos();   
    }
    
    private void cargarContactos() {
        try (BufferedReader br = new BufferedReader(new FileReader(CONTACTOS_FILE))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                textAreaContactos.append(linea + "\n");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void guardarContacto(String contacto) {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(CONTACTOS_FILE, true))) {
            bw.write(contacto);
            bw.newLine();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void eliminarContacto(String contacto) {
        List<String> lineas = new ArrayList<>();
        boolean eliminarSiguienteLinea = false;
        boolean borrarEspacioEnBlanco = false;

        try (BufferedReader br = new BufferedReader(new FileReader(CONTACTOS_FILE))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                if (eliminarSiguienteLinea) {
                    // No agregar la línea actual si es la siguiente en eliminar
                    eliminarSiguienteLinea = false;
                    borrarEspacioEnBlanco = true; // Marcar para borrar espacio en blanco
                    continue;
                }

                if (borrarEspacioEnBlanco) {
                    // Si ya se marcó borrar espacio en blanco, no agregar esta línea
                    borrarEspacioEnBlanco = false;
                    continue;
                }

                if (linea.trim().equals(contacto.trim())) {
                    eliminarSiguienteLinea = true; // Marcar siguiente línea para eliminar (número de teléfono)
                    continue;
                }

                lineas.add(linea);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Escribir de nuevo las líneas restantes en el archivo
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(CONTACTOS_FILE))) {
            for (String l : lineas) {
                bw.write(l);
                bw.newLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Actualizar el JTextArea
        textAreaContactos.setText("");
        for (String l : lineas) {
            textAreaContactos.append(l + "\n");
        }
    }
    
    // Método para guardar contenido en un archivo
private void guardarEnArchivo(String nombreArchivo, String contenido) {
    try (BufferedWriter writer = new BufferedWriter(new FileWriter(nombreArchivo, true))) {
        writer.write(contenido);
        writer.newLine();
    } catch (IOException e) {
        e.printStackTrace();
    }
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelContactos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaContactos = new javax.swing.JTextArea();
        btnEliminar = new javax.swing.JButton();
        btnBloquear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnContactos = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnBloqueados = new javax.swing.JButton();
        btnOcultar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelContactos.setBackground(new java.awt.Color(0, 0, 0));

        textAreaContactos.setBackground(new java.awt.Color(0, 0, 0));
        textAreaContactos.setColumns(20);
        textAreaContactos.setForeground(new java.awt.Color(255, 255, 255));
        textAreaContactos.setRows(5);
        jScrollPane1.setViewportView(textAreaContactos);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBloquear.setText("Bloquear");
        btnBloquear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloquearActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CONTACTOS");

        javax.swing.GroupLayout panelContactosLayout = new javax.swing.GroupLayout(panelContactos);
        panelContactos.setLayout(panelContactosLayout);
        panelContactosLayout.setHorizontalGroup(
            panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContactosLayout.createSequentialGroup()
                .addGroup(panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelContactosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelContactosLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBloquear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelContactosLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(85, 85, 85))
        );
        panelContactosLayout.setVerticalGroup(
            panelContactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContactosLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addGap(18, 18, 18)
                .addComponent(btnBloquear)
                .addGap(16, 16, 16))
        );

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        btnContactos.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Downloads\\iconos.jpg")); // NOI18N
        btnContactos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContactosActionPerformed(evt);
            }
        });

        btnAgregar.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Downloads\\agregar.jpg")); // NOI18N
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBloqueados.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Downloads\\bloqueados.png")); // NOI18N
        btnBloqueados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloqueadosActionPerformed(evt);
            }
        });

        btnOcultar.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Downloads\\Barra des.jpg")); // NOI18N
        btnOcultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOcultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBloqueados, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnContactos, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOcultar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnContactos, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBloqueados, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOcultar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelContactos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelContactos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
         String contactoSeleccionado = textAreaContactos.getSelectedText();
        if (contactoSeleccionado != null && !contactoSeleccionado.isEmpty()) {
            eliminarContacto(contactoSeleccionado);
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un contacto para eliminar.");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        ComponenteVisual ComponenteVisual = new ComponenteVisual();
        ComponenteVisual.setVisible(true);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnBloqueadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloqueadosActionPerformed
        // TODO add your handling code here:
        ContactosBloqueados ContactosBloqueados = new ContactosBloqueados();
        ContactosBloqueados.setVisible(true);
    }//GEN-LAST:event_btnBloqueadosActionPerformed

    private void btnContactosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContactosActionPerformed
        // TODO add your handling code here:
        ContactosCreados ContactosCreados = new ContactosCreados();
        ContactosCreados.setVisible(true);
    }//GEN-LAST:event_btnContactosActionPerformed

    private void btnBloquearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloquearActionPerformed
        // TODO add your handling code here:
        String selectedText = textAreaContactos.getSelectedText();
    
    if (selectedText != null && !selectedText.isEmpty()) {
        String textAreaContent = textAreaContactos.getText();
        String[] lines = textAreaContent.split("\\n");
        
        StringBuilder contactoBloqueado = new StringBuilder();
        
        // Recorremos para bloquear el nombre
        for (int i = 0; i < lines.length; i++) {
            if (lines[i].equals(selectedText)) {
                contactoBloqueado.append(lines[i]).append("\n");
            }
        }
        
        // Guardar en archivo ContactosBloqueados.txt
        guardarEnArchivo("ContactosBloqueados.txt", contactoBloqueado.toString().trim());
    }
    }//GEN-LAST:event_btnBloquearActionPerformed

    private void btnOcultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOcultarActionPerformed
        // TODO add your handling code here:
        if (isPanelVisible) {
        timer = new Timer(5, new ActionListener() {
            int panelWidth = panelContactos.getWidth();

            @Override
            public void actionPerformed(ActionEvent e) {
                if (panelWidth > 0) {
                    panelWidth -= 5;
                    panelContactos.setLocation(panelContactos.getX() + 5, panelContactos.getY());
                    panelContactos.setSize(panelWidth, panelContactos.getHeight());
                } else {
                    isPanelVisible = false;
                    timer.stop();
                }
            }
        });
    } else {
        timer = new Timer(5, new ActionListener() {
            int panelWidth = 0;

            @Override
            public void actionPerformed(ActionEvent e) {
                if (panelWidth < 250) {  // assuming 250 is the original width
                    panelWidth += 5;
                    panelContactos.setLocation(panelContactos.getX() - 5, panelContactos.getY());
                    panelContactos.setSize(panelWidth, panelContactos.getHeight());
                } else {
                    isPanelVisible = true;
                    timer.stop();
                }
            }
        });
    }
    timer.start();
    }//GEN-LAST:event_btnOcultarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContactosCreados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContactosCreados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContactosCreados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContactosCreados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContactosCreados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBloqueados;
    private javax.swing.JButton btnBloquear;
    private javax.swing.JButton btnContactos;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnOcultar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelContactos;
    private javax.swing.JTextArea textAreaContactos;
    // End of variables declaration//GEN-END:variables
}
